pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
}

enableFeaturePreview("TYPESAFE_PROJECT_ACCESSORS")
rootProject.name = "CleanArch"

includeModulesDir()

def findGradleModules(File file) {
    ArrayList<File> mutableList = []
    file.eachFileRecurse() {
        if (it.name == "build.gradle" && it.parentFile != rootDir) {
            mutableList.add(new File(it.parent.substring(
                it.parent.lastIndexOf(settingsDir.name) + settingsDir.name.size())
            ))
        }
    }
    return mutableList
}

def includeModulesDir() {
    def foundModules = findGradleModules(rootDir)
        .collect { it.path.replace(File.separatorChar.toString(), ":") }
        .sort()

    println("foundModules: $foundModules")
    include(foundModules)
}
